// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ruyicai.actioncenter.domain;

import com.ruyicai.actioncenter.domain.CouponBatchChannel;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CouponBatchChannel_Roo_Entity {
    
    declare @type: CouponBatchChannel: @Entity;
    
    declare @type: CouponBatchChannel: @Table(name = "COUPONBATCHCHANNEL");
    
    @PersistenceContext
    transient EntityManager CouponBatchChannel.entityManager;
    
    @Transactional
    public void CouponBatchChannel.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void CouponBatchChannel.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            CouponBatchChannel attached = CouponBatchChannel.findCouponBatchChannel(this.couponbatchchannelid);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void CouponBatchChannel.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void CouponBatchChannel.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public CouponBatchChannel CouponBatchChannel.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        CouponBatchChannel merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager CouponBatchChannel.entityManager() {
        EntityManager em = new CouponBatchChannel().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long CouponBatchChannel.countCouponBatchChannels() {
        return entityManager().createQuery("SELECT COUNT(o) FROM CouponBatchChannel o", Long.class).getSingleResult();
    }
    
    public static List<CouponBatchChannel> CouponBatchChannel.findAllCouponBatchChannels() {
        return entityManager().createQuery("SELECT o FROM CouponBatchChannel o", CouponBatchChannel.class).getResultList();
    }
    
    public static CouponBatchChannel CouponBatchChannel.findCouponBatchChannel(long couponbatchchannelid) {
        return entityManager().find(CouponBatchChannel.class, couponbatchchannelid);
    }
    
    public static List<CouponBatchChannel> CouponBatchChannel.findCouponBatchChannelEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM CouponBatchChannel o", CouponBatchChannel.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
